import*as e from"format-message";import{Store as i}from"pullstate";var r=new i({locale:null});var o={languages:[],localeFromPhone:null,defaultFallback:null,locale:null,translations:{}},s=a=>a&&!o.translations[a]?null:(o.locale=a,e.setup({locale:o.locale,translations:o.translations[o.locale]}),r.update(l=>{l.locale=a}),a),p=({localeFromPhone:a,languages:l,defaultFallback:t=null})=>{if(o.localeFromPhone=a(),!l||!Array.isArray(l)||l.length===0){console.warn("No language packs found");return}for(let c of l){let n=c;if(!n.locale){console.warn("Check language pack for locales");continue}if(!n.translations){console.warn(`Not found "translations" object in ${n.locale} locale`);continue}o.languages.push({locale:n.locale,meta:n.meta}),o.defaultFallback||(o.defaultFallback=n.locale),o.translations[n.locale]=n.translations}return t&&!o.translations[t]?console.warn("Fallback language not found in language packs"):t&&(o.defaultFallback=t),e.setup({locale:o.defaultFallback,translations:o.translations[o.defaultFallback]}),s(o.localeFromPhone)},m=()=>{let a=r.useState(t=>t.locale||o.defaultFallback);return{getLanguages:()=>o.languages.map(t=>({selected:a===t.locale,...t})),locale:a,t:e,changeLocale:s}};export{s as changeLocale,p as initialization,m as useIntl};
